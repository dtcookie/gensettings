{
	"allowedScopes": [
		"ua-screen"
	],
	"constraints": [
		{
			"customMessage": "The scope must be a ME type or a valid generic type.",
			"customValidatorId": "ua-scope-validator",
			"type": "CUSTOM_VALIDATOR_REF"
		}
	],
	"description": "Configure layout for entity details page.",
	"displayName": "Details screen layout",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"BreadcrumbType": {
			"description": "",
			"displayName": "Breadcrumb type",
			"documentation": "",
			"items": [
				{
					"displayName": "Entity reference",
					"value": "ENTITY_REF"
				},
				{
					"displayName": "Entities list reference",
					"value": "ENTITY_LIST_REF"
				},
				{
					"displayName": "Static link",
					"value": "STATIC_LINK"
				},
				{
					"displayName": "No operation",
					"value": "NOOP"
				}
			],
			"type": "enum"
		},
		"CardType": {
			"description": "",
			"displayName": "Card type",
			"documentation": "",
			"items": [
				{
					"displayName": "Chart group",
					"value": "CHART_GROUP"
				},
				{
					"displayName": "Entities list",
					"value": "ENTITIES_LIST"
				},
				{
					"displayName": "Metric table",
					"value": "METRIC_TABLE"
				},
				{
					"displayName": "Attribute table",
					"value": "ATTRIBUTE_TABLE"
				},
				{
					"displayName": "Events",
					"value": "EVENTS"
				},
				{
					"displayName": "Logs",
					"value": "LOGS"
				},
				{
					"displayName": "Message card",
					"value": "MESSAGE"
				},
				{
					"displayName": "Injected cards",
					"value": "INJECTIONS"
				},
				{
					"displayName": "Break line",
					"value": "BREAK_LINE"
				},
				{
					"displayName": "Distributed traces card",
					"value": "TRACES"
				},
				{
					"displayName": "SLO list",
					"value": "SLO_LIST"
				},
				{
					"displayName": "Health card",
					"value": "HEALTH_CARD"
				},
				{
					"displayName": "Card group",
					"value": "CARD_GROUP"
				}
			],
			"type": "enum"
		},
		"WidthType": {
			"description": "",
			"displayName": "WidthType",
			"documentation": "",
			"items": [
				{
					"displayName": "Full size",
					"value": "FULL_SIZE"
				},
				{
					"displayName": "Half size",
					"value": "HALF_SIZE"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 1,
	"multiObject": false,
	"properties": {
		"layout": {
			"description": "### Screen layout \n Reference cards that should be shown on the screen (like chart groups or entity lists) or use the auto generated screen layout.",
			"displayName": "",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/LayoutDefinition"
			}
		},
		"staticContent": {
			"description": "### Static screen content \n Enable/Disable static elements like Properties or Problems.",
			"displayName": "",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/StaticContent"
			}
		}
	},
	"schemaGroups": [
		"group:unified-analysis"
	],
	"schemaId": "builtin:ua.screen-settings",
	"types": {
		"Breadcrumb": {
			"description": "",
			"displayName": "Breadcrumb",
			"documentation": "",
			"properties": {
				"displayName": {
					"constraints": [
						{
							"maxLength": 300,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "A display name for a non-clickable or entity list breadcrumb",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"expectedValues": [
							"NOOP",
							"ENTITY_LIST_REF"
						],
						"property": "type",
						"type": "IN"
					},
					"type": "text"
				},
				"entitySelectorTemplate": {
					"constraints": [
						{
							"maxLength": 300,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Invalid entity selector",
							"customValidatorId": "entity-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"default": "",
					"description": "An entity selector that is used to reference related entity screen",
					"displayName": "Entity selector template",
					"documentation": "For example for a process screen where you want to show the host it runs on, this might look like this:  \n`type(HOST), toRelationships.isProcessOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "ENTITY_REF",
						"property": "type",
						"type": "EQUALS"
					},
					"type": "text"
				},
				"entityType": {
					"constraints": [
						{
							"maxLength": 300,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "An entity type of entities list screen",
					"displayName": "Entity type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "ENTITY_LIST_REF",
						"property": "type",
						"type": "EQUALS"
					},
					"type": "text"
				},
				"link": {
					"constraints": [
						{
							"maxLength": 300,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "A key of server-defined static link",
					"displayName": "Link key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "STATIC_LINK",
						"property": "type",
						"type": "EQUALS"
					},
					"type": "text"
				},
				"type": {
					"default": "ENTITY_REF",
					"description": "",
					"displayName": "Breadcrumb Type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/BreadcrumbType"
					}
				}
			},
			"summaryPattern": "{type} {entitySelectorTemplate}{entityType}{link}{displayName}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"CardReference": {
			"description": "",
			"displayName": "CardReference",
			"documentation": "",
			"properties": {
				"cards": {
					"description": "",
					"displayName": "List of card references",
					"documentation": "List of references to cards displayed in card group",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/NestedCardReference"
						}
					},
					"maxObjects": 100,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "CARD_GROUP",
						"property": "type",
						"type": "EQUALS"
					},
					"type": "list"
				},
				"collapsed": {
					"description": "If true, card content will be collapsed",
					"displayName": "Collapse card",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"HEALTH_CARD"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"type": "boolean"
				},
				"conditions": {
					"description": "",
					"displayName": "List of conditions",
					"documentation": "All conditions from the list need to be fulfilled for the card to be visible",
					"items": {
						"constraints": [
							{
								"maxLength": 500,
								"minLength": 1,
								"type": "LENGTH"
							}
						],
						"datasource": {
							"filterProperties": [],
							"fullContext": false,
							"identifier": "conditionExpressionDatasource",
							"resetValue": "NEVER",
							"useApiSearch": true,
							"validate": false
						},
						"description": "",
						"displayName": "",
						"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
						"subType": "datasource",
						"type": "text"
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"precondition": {
							"expectedValue": "INJECTIONS",
							"property": "type",
							"type": "EQUALS"
						},
						"type": "NOT"
					},
					"type": "set"
				},
				"displayInSidebar": {
					"description": "If true, card will be available in sidebar and button in toolbar will appear to show it",
					"displayName": "Display in sidebar",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"MESSAGE",
								"HEALTH_CARD",
								"CARD_GROUP"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"type": "boolean"
				},
				"displayName": {
					"constraints": [
						{
							"type": "NOT_BLANK"
						},
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "default",
					"description": "Display name of a card group",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "CARD_GROUP",
						"property": "type",
						"type": "EQUALS"
					},
					"type": "text"
				},
				"entitySelectorTemplate": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Invalid entity selector",
							"customValidatorId": "entity-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"description": "An entity selector that is used to reference card from other ME type screen",
					"displayName": "Entity selector template",
					"documentation": "For example for a host screen where you want to show the processes charts this might look like this:  \n`type(PROCESS_GROUP_INSTANCE), fromRelationships.isProcessOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"TRACES",
								"SLO_LIST",
								"HEALTH_CARD",
								"CARD_GROUP"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"type": "text"
				},
				"key": {
					"constraints": [
						{
							"type": "NOT_BLANK"
						},
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Card key must only contain letters, numbers or '-', '_'.",
							"pattern": "^[\\w-]*$",
							"type": "PATTERN"
						}
					],
					"datasource": {
						"filterProperties": [],
						"fullContext": true,
						"identifier": "cardKeyDataSource",
						"resetValue": "NEVER",
						"useApiSearch": true,
						"validate": false
					},
					"default": "default",
					"description": "Unique key of the card, which is used to reference desired card configuration",
					"displayName": "Card key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"CARD_GROUP"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"subType": "datasource",
					"type": "text"
				},
				"ribbonButton": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"datasource": {
						"filterProperties": [],
						"fullContext": false,
						"identifier": "ribbonButtonDatasource",
						"resetValue": "NEVER",
						"useApiSearch": true,
						"validate": false
					},
					"description": "Custom component key to render as ribbon button",
					"displayName": "Ribbon button key",
					"documentation": "Every card has its default ribbon button. It can be overriden with that option and custom component on frontend.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"expectedValue": true,
						"property": "displayInSidebar",
						"type": "EQUALS"
					},
					"subType": "datasource",
					"type": "text"
				},
				"type": {
					"default": "CHART_GROUP",
					"description": "",
					"displayName": "Card Type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/CardType"
					}
				},
				"width": {
					"description": "A value that determines how much vertical space will that card take",
					"displayName": "Card width",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"HEALTH_CARD"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"type": {
						"$ref": "#/enums/WidthType"
					}
				}
			},
			"summaryPattern": "{type} - {key} ",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"HeaderType": {
			"description": "",
			"displayName": "HeaderType",
			"documentation": "",
			"properties": {
				"description": {
					"constraints": [
						{
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "In markdown brackets use only seaOtter links (https://dt-url.net/XXXXXXX) or action expression",
							"customValidatorId": "ua-safe-markdown-link-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"description": "The description of the screen",
					"displayName": "Description",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"subType": "multiline",
					"type": "text"
				},
				"icon": {
					"constraints": [
						{
							"customMessage": "Icon name must be valid and contain a barista icon id.",
							"pattern": "^(?:[a-zA-Z0-9-])*$",
							"type": "PATTERN"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "",
					"displayName": "Icon name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "1",
			"versionInfo": ""
		},
		"LayoutDefinition": {
			"description": "",
			"displayName": "LayoutDefinition",
			"documentation": "",
			"properties": {
				"autoGenerate": {
					"default": true,
					"description": "If true the screen content is auto generated. Disable to configure your own layout.",
					"displayName": "Auto generated content",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"cards": {
					"description": "A list of cards that should be shown on the screen",
					"displayName": "Cards layout",
					"documentation": "Reference cards that should be shown on the screen.  \nCards will be displayed in order defined on this list.",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/CardReference"
						}
					},
					"maxObjects": 50,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": false,
						"property": "autoGenerate",
						"type": "EQUALS"
					},
					"type": "list"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"NestedCardReference": {
			"description": "",
			"displayName": "NestedCardReference",
			"documentation": "",
			"properties": {
				"conditions": {
					"description": "",
					"displayName": "List of conditions",
					"documentation": "All conditions from the list need to be fulfilled for the card to be visible",
					"items": {
						"constraints": [
							{
								"maxLength": 500,
								"minLength": 1,
								"type": "LENGTH"
							}
						],
						"datasource": {
							"filterProperties": [],
							"fullContext": false,
							"identifier": "conditionExpressionDatasource",
							"resetValue": "NEVER",
							"useApiSearch": true,
							"validate": false
						},
						"description": "",
						"displayName": "",
						"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
						"subType": "datasource",
						"type": "text"
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"precondition": {
							"expectedValue": "INJECTIONS",
							"property": "type",
							"type": "EQUALS"
						},
						"type": "NOT"
					},
					"type": "set"
				},
				"entitySelectorTemplate": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Invalid entity selector",
							"customValidatorId": "entity-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"description": "An entity selector that is used to reference card from other ME type screen",
					"displayName": "Entity selector template",
					"documentation": "For example for a host screen where you want to show the processes charts this might look like this:  \n`type(PROCESS_GROUP_INSTANCE), fromRelationships.isProcessOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"TRACES",
								"SLO_LIST",
								"CARD_GROUP"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"type": "text"
				},
				"key": {
					"constraints": [
						{
							"type": "NOT_BLANK"
						},
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Card key must only contain letters, numbers or '-', '_'.",
							"pattern": "^[\\w-]*$",
							"type": "PATTERN"
						}
					],
					"datasource": {
						"filterProperties": [],
						"fullContext": true,
						"identifier": "cardKeyDataSource",
						"resetValue": "NEVER",
						"useApiSearch": true,
						"validate": false
					},
					"default": "default",
					"description": "Unique key of the card, which is used to reference desired card configuration",
					"displayName": "Card key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"INJECTIONS",
								"BREAK_LINE",
								"CARD_GROUP"
							],
							"property": "type",
							"type": "IN"
						},
						"type": "NOT"
					},
					"subType": "datasource",
					"type": "text"
				},
				"type": {
					"default": "ENTITIES_LIST",
					"description": "",
					"displayName": "Card Type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/CardType"
					}
				}
			},
			"summaryPattern": "{type} - {key} ",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"StaticContent": {
			"description": "",
			"displayName": "StaticContent",
			"documentation": "",
			"properties": {
				"breadcrumbs": {
					"description": "A list of breadcrumbs leading to the screen",
					"displayName": "Breadcrumbs",
					"documentation": "Define breadcrumbs list in order from root page to leaf(current page would be last on that list).",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/Breadcrumb"
						}
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "list"
				},
				"header": {
					"description": "",
					"displayName": "Header definition",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/types/HeaderType"
					}
				},
				"showAddTag": {
					"default": true,
					"description": "If true, the \"Add tag\" button will be displayed",
					"displayName": "Allow adding tags",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"showGlobalFilter": {
					"default": true,
					"description": "If true, the screen show the filter bar",
					"displayName": "Show filter",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"showOwnership": {
					"description": "If true, the screen show the ownerships card",
					"displayName": "Show ownership",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"featureFlag": "com.compuware.ownershipUAComponent.feature",
						"maturity": "IN_DEVELOPMENT"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"showProblems": {
					"default": true,
					"description": "If true, the screen show the problem card",
					"displayName": "Show problems",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"showProperties": {
					"default": true,
					"description": "If true, the screen show the properties card",
					"displayName": "Show properties",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"showTags": {
					"default": true,
					"description": "If true, entity tags will be displayed",
					"displayName": "Show tags",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"version": "4.37"
}