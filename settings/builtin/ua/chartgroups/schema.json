{
	"allowedScopes": [
		"ua-screen"
	],
	"constraints": [
		{
			"customMessage": "The scope must be a ME type or a valid generic type.",
			"customValidatorId": "ua-scope-validator",
			"type": "CUSTOM_VALIDATOR_REF"
		}
	],
	"description": "You can define here multiple chart groups with a unique key. These defined chart groups can then be referenced in the screen layout config. In the base config you can specify the order and if a group is shown on the screen.",
	"displayName": "Chart group cards",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"AggregationType": {
			"description": "",
			"displayName": "Aggregation type",
			"documentation": "",
			"items": [
				{
					"displayName": "avg",
					"value": "AVG"
				},
				{
					"displayName": "count",
					"value": "COUNT"
				},
				{
					"displayName": "max",
					"value": "MAX"
				},
				{
					"displayName": "median",
					"value": "MEDIAN"
				},
				{
					"displayName": "min",
					"value": "MIN"
				},
				{
					"displayName": "sum",
					"value": "SUM"
				},
				{
					"displayName": "value",
					"value": "VALUE"
				}
			],
			"type": "enum"
		},
		"ChartGroupMode": {
			"description": "",
			"displayName": "ChartGroupMode",
			"documentation": "",
			"items": [
				{
					"displayName": "Normal",
					"value": "NORMAL"
				},
				{
					"displayName": "Static",
					"value": "STATIC"
				}
			],
			"type": "enum"
		},
		"ChartVisualizationType": {
			"description": "",
			"displayName": "ChartVisualizationType",
			"documentation": "",
			"items": [
				{
					"displayName": "Graph",
					"value": "GRAPH_CHART"
				},
				{
					"displayName": "Pie Chart",
					"value": "PIE_CHART"
				},
				{
					"displayName": "Single Value",
					"value": "SINGLE_VALUE"
				}
			],
			"type": "enum"
		},
		"FoldTransformation": {
			"description": "",
			"displayName": "Fold transformation",
			"documentation": "",
			"items": [
				{
					"displayName": "Auto",
					"value": "AUTO"
				},
				{
					"displayName": "Last value",
					"value": "LAST_VALUE"
				},
				{
					"displayName": "Maximum",
					"value": "MAX"
				},
				{
					"displayName": "Minimum",
					"value": "MIN"
				},
				{
					"displayName": "Sum",
					"value": "SUM"
				},
				{
					"displayName": "Median",
					"value": "MEDIAN"
				},
				{
					"displayName": "Value",
					"value": "VALUE"
				},
				{
					"displayName": "Percentile 10th",
					"value": "PERCENTILE_10"
				},
				{
					"displayName": "Percentile 75th",
					"value": "PERCENTILE_75"
				},
				{
					"displayName": "Percentile 90th",
					"value": "PERCENTILE_90"
				}
			],
			"type": "enum"
		},
		"Position": {
			"description": "",
			"displayName": "Position",
			"documentation": "",
			"items": [
				{
					"displayName": "left",
					"value": "LEFT"
				},
				{
					"displayName": "right",
					"value": "RIGHT"
				}
			],
			"type": "enum"
		},
		"SeriesType": {
			"description": "",
			"displayName": "Series type",
			"documentation": "",
			"items": [
				{
					"displayName": "Column",
					"value": "COLUMN"
				},
				{
					"displayName": "Line",
					"value": "LINE"
				},
				{
					"displayName": "Area",
					"value": "AREA"
				}
			],
			"type": "enum"
		},
		"ThemeColorEnum": {
			"description": "",
			"displayName": "Color theme",
			"documentation": "",
			"items": [
				{
					"displayName": "Default",
					"value": "DEFAULT"
				},
				{
					"displayName": "Blue",
					"value": "BLUE"
				},
				{
					"displayName": "Royalblue",
					"value": "ROYALBLUE"
				},
				{
					"displayName": "Purple",
					"value": "PURPLE"
				},
				{
					"displayName": "Yellow",
					"value": "YELLOW"
				},
				{
					"displayName": "Turquoise",
					"value": "TURQUOISE"
				},
				{
					"displayName": "Orange",
					"value": "ORANGE"
				},
				{
					"displayName": "Green",
					"value": "GREEN"
				},
				{
					"displayName": "Red",
					"value": "RED"
				},
				{
					"displayName": "Gray",
					"value": "GRAY"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 100,
	"multiObject": true,
	"ordered": false,
	"properties": {
		"appendDetectedMetrics": {
			"description": "If true, Charts for all associated metrics will be generated and appended to the list in chart selector.",
			"displayName": "Append Detected Metrics",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "boolean"
		},
		"charts": {
			"description": "Collection of charts definition in this chart group",
			"displayName": "Charts",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": {
					"$ref": "#/types/ChartDefinition"
				}
			},
			"maxObjects": 100,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list"
		},
		"chartsInRow": {
			"constraints": [
				{
					"maximum": 4,
					"minimum": 1,
					"type": "RANGE"
				}
			],
			"description": "",
			"displayName": "Maximum number of charts in a row",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "integer"
		},
		"conditions": {
			"description": "",
			"displayName": "List of conditions",
			"documentation": "All conditions from the list need to be fulfilled for the ChartGroup card to be visible",
			"items": {
				"constraints": [
					{
						"maxLength": 500,
						"minLength": 1,
						"type": "LENGTH"
					}
				],
				"datasource": {
					"filterProperties": [],
					"fullContext": false,
					"identifier": "conditionExpressionDatasource",
					"resetValue": "NEVER",
					"useApiSearch": true,
					"validate": false
				},
				"description": "",
				"displayName": "",
				"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
				"subType": "datasource",
				"type": "text"
			},
			"maxObjects": 10,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		},
		"description": {
			"constraints": [
				{
					"minLength": 1,
					"type": "LENGTH"
				},
				{
					"customMessage": "In markdown brackets use only seaOtter links (https://dt-url.net/XXXXXXX) or action expression",
					"customValidatorId": "ua-safe-markdown-link-validator",
					"type": "CUSTOM_VALIDATOR_REF"
				}
			],
			"description": "The description of the card",
			"displayName": "Description",
			"documentation": "Markdown syntax can be used to enrich description. To define a link, you can only use seaOtter links (https://dt-url.net/XXXXXXX) or action expression \n\n The format of a single action expression is: actionName|key=param|key2=param2",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"precondition": {
				"expectedValues": [
					"NORMAL",
					"STATIC"
				],
				"property": "mode",
				"type": "IN"
			},
			"subType": "multiline",
			"type": "text"
		},
		"displayName": {
			"constraints": [
				{
					"maxLength": 200,
					"minLength": 1,
					"type": "LENGTH"
				}
			],
			"description": "The title of the card.",
			"displayName": "Display name",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "text"
		},
		"entitySelectorTemplate": {
			"constraints": [
				{
					"maxLength": 500,
					"minLength": 1,
					"type": "LENGTH"
				},
				{
					"customMessage": "Invalid entity selector",
					"customValidatorId": "entity-selector-validator",
					"type": "CUSTOM_VALIDATOR_REF"
				}
			],
			"description": "An entity selector that is used to fetch data for related entities",
			"displayName": "Entity selector template",
			"documentation": "For example for a host screen where you want to show the processes charts this might look like this:  \n`type(PROCESS_GROUP_INSTANCE), fromRelationships.isProcessOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.\n\nLeave empty to gather data for current entity.",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "text"
		},
		"hideEmptyCharts": {
			"description": "If true, All empty charts will be hidden.",
			"displayName": "Hide empty charts",
			"documentation": "Decreases \"Number of charts to display\" to the number of available charts.",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "boolean"
		},
		"key": {
			"constraints": [
				{
					"type": "NOT_BLANK"
				},
				{
					"maxLength": 200,
					"minLength": 1,
					"type": "LENGTH"
				},
				{
					"customMessage": "Element identifier must only contain letters, numbers or '-', '_'.",
					"pattern": "^[\\w-]*$",
					"type": "PATTERN"
				}
			],
			"default": "default",
			"description": "Unique key, which is used to map to this chart group in the screen layout config",
			"displayName": "Key",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "text"
		},
		"mode": {
			"default": "NORMAL",
			"description": "",
			"displayName": "Mode",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/enums/ChartGroupMode"
			}
		},
		"numberOfVisibleCharts": {
			"constraints": [
				{
					"maximum": 10,
					"minimum": 0,
					"type": "RANGE"
				}
			],
			"default": 4,
			"description": "",
			"displayName": "Number of charts to display",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "integer"
		}
	},
	"schemaGroups": [
		"group:unified-analysis"
	],
	"schemaId": "builtin:ua.chart-groups",
	"types": {
		"ChartDefinition": {
			"description": "",
			"displayName": "Chart definition",
			"documentation": "",
			"properties": {
				"conditions": {
					"description": "",
					"displayName": "List of conditions",
					"documentation": "All conditions from the list need to be fulfilled for the chart to be visible",
					"items": {
						"constraints": [
							{
								"maxLength": 500,
								"minLength": 1,
								"type": "LENGTH"
							}
						],
						"datasource": {
							"filterProperties": [],
							"fullContext": false,
							"identifier": "conditionExpressionDatasource",
							"resetValue": "NEVER",
							"useApiSearch": true,
							"validate": false
						},
						"description": "",
						"displayName": "",
						"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
						"subType": "datasource",
						"type": "text"
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"detailsMessage": {
					"constraints": [
						{
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "In markdown brackets use only seaOtter links (https://dt-url.net/XXXXXXX) or action expression",
							"customValidatorId": "ua-safe-markdown-link-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"description": "The message displayed when chart-group choice of charts and aggregation is fixed",
					"displayName": "Details message",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"subType": "multiline",
					"type": "text"
				},
				"displayName": {
					"constraints": [
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "Chart",
					"description": "",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"graphChartConfig": {
					"description": "",
					"displayName": "",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "GRAPH_CHART",
						"property": "visualizationType",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/types/GraphChartConfig"
					}
				},
				"pieChartConfig": {
					"description": "",
					"displayName": "",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "PIE_CHART",
						"property": "visualizationType",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/types/PieChartConfig"
					}
				},
				"singleValueConfig": {
					"description": "",
					"displayName": "",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "SINGLE_VALUE",
						"property": "visualizationType",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/types/SingleValueConfig"
					}
				},
				"visualizationType": {
					"default": "GRAPH_CHART",
					"description": "",
					"displayName": "Visualization Type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/ChartVisualizationType"
					}
				}
			},
			"summaryPattern": "{displayName}",
			"type": "object",
			"version": "2.3",
			"versionInfo": ""
		},
		"ColorOverrides": {
			"description": "",
			"displayName": "ColorOverrides",
			"documentation": "",
			"properties": {
				"color": {
					"constraints": [
						{
							"customMessage": "Please provide a valid color via HEX notation. e.g. #FF0000.",
							"pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
							"type": "PATTERN"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "#0000ff",
					"description": "RGB code of color",
					"displayName": "Color",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "color",
					"type": "text"
				},
				"seriesName": {
					"constraints": [
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "series name",
					"description": "",
					"displayName": "Series Name",
					"documentation": "Series name should point to whole metric or single dimension name",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				}
			},
			"summaryPattern": "{seriesName}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"GraphChartConfig": {
			"description": "",
			"displayName": "GraphChartConfig",
			"documentation": "",
			"properties": {
				"connectGaps": {
					"description": "When true, gaps in charts will be connected even if there is truly no data",
					"displayName": "Connect gaps",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"defaultAggregation": {
					"description": "Defines default aggregation of the chart timeseries. If not defined or selected one is not supported, it is deduced from metrics metadata.",
					"displayName": "Default aggregation",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/AggregationType"
					}
				},
				"metrics": {
					"description": "Defines how to fetch data for a single line in the chart",
					"displayName": "Metrics",
					"documentation": "",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/MetricDefinition"
						}
					},
					"maxObjects": 50,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "list"
				},
				"stacked": {
					"description": "When true, series on chart are stacked.",
					"displayName": "Stacked chart",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"thresholds": {
					"description": "",
					"displayName": "List thresholds",
					"documentation": "List of defined thresholds for the chart",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/Threshold"
						}
					},
					"maxObjects": 100,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"visualization": {
					"description": "",
					"displayName": "Visualization",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/types/VisualizationOptions"
					}
				},
				"xAxis": {
					"description": "You can control how X axis of your graph are displayed",
					"displayName": "X axis",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/types/XAxis"
					}
				},
				"yAxes": {
					"description": "You can control how each Y axis of your graph are displayed",
					"displayName": "Y axes",
					"documentation": "",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/YAxis"
						}
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "list"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "1.5.1",
			"versionInfo": ""
		},
		"MetricDefinition": {
			"description": "",
			"displayName": "Metric",
			"documentation": "",
			"properties": {
				"metricSelector": {
					"constraints": [
						{
							"maxLength": 1000,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customValidatorId": "metric-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"default": "",
					"description": "A metric selector expression for a dedicated metric line",
					"displayName": "Metric selector expression",
					"documentation": "For example, if you want to show the available disk space of a host, use  \n`builtin:host.disk.free`. \n\n It also supports the ability to split by dimension, aggregate the selected metric and a lot more, for example:  \n`builtin:host.disk.free:splitBy(dt.entity.disk):max`  \nThe filter for the ME id will be applied automatically.\n\nThe [Metric Browser](/ui/metrics \"Visit Metrics\") gives an overview of all the metrics an the available operations for every metric.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"visualization": {
					"description": "",
					"displayName": "Visualization",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/types/MetricVisualizationOptions"
					}
				},
				"yAxisKey": {
					"constraints": [
						{
							"maxLength": 50,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Select Y-axis to be matched with this metric by its key",
					"displayName": "Y-Axis key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				}
			},
			"summaryPattern": "{metricSelector}",
			"type": "object",
			"version": "1.1",
			"versionInfo": ""
		},
		"MetricSelector": {
			"description": "A metric selector expression for a dedicated metric line",
			"displayName": "Metric selector expression",
			"documentation": "For example, if you want to show the available disk space of a host, use  \n`builtin:host.disk.free`. \n\n It also supports the ability to split by dimension, aggregate the selected metric and a lot more, for example:  \n`builtin:host.disk.free:splitBy(dt.entity.disk):max`  \nThe filter for the ME id will be applied automatically.\n\nThe [Metric Browser](/ui/metrics \"Visit Metrics\") gives an overview of all the metrics an the available operations for every metric.",
			"properties": {
				"metricSelector": {
					"constraints": [
						{
							"customValidatorId": "metric-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Metric selector expression",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				}
			},
			"summaryPattern": "{metricSelector}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"MetricVisualizationOptions": {
			"description": "",
			"displayName": "MetricVisualizationOptions",
			"documentation": "Set visualization options for timeseries. You can set it globally for whole chart, or individually for each metric selector.\n\n Metric selector options override options for charts.",
			"properties": {
				"colorOverride": {
					"description": "",
					"displayName": "List of color overrides",
					"documentation": "There is possibility to override color of single series, even single dimension of a metric",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/ColorOverrides"
						}
					},
					"maxObjects": 100,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"displayName": {
					"constraints": [
						{
							"maxLength": 200,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"seriesType": {
					"description": "",
					"displayName": "Series type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/SeriesType"
					}
				},
				"themeColor": {
					"description": "",
					"displayName": "Color theme",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/ThemeColorEnum"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0.1",
			"versionInfo": ""
		},
		"PieChartConfig": {
			"description": "",
			"displayName": "PieChartConfig",
			"documentation": "",
			"properties": {
				"colorOverride": {
					"description": "",
					"displayName": "List of color overrides",
					"documentation": "There is possibility to override color of single series, even single dimension of a metric",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/ColorOverrides"
						}
					},
					"maxObjects": 100,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"defaultAggregation": {
					"description": "Defines default aggregation of the chart timeseries. If not defined or selected one is not supported, it is deduced from metrics metadata.",
					"displayName": "Default aggregation",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/AggregationType"
					}
				},
				"metric": {
					"description": "Defines how to fetch data for the pie chart, please note that various fold transformations needs to be explicitly defined here in the selector",
					"displayName": "Metric",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/types/MetricSelector"
					}
				},
				"showLegend": {
					"description": "When true, axis legend on the whole chart is visible",
					"displayName": "Show legend",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"themeColor": {
					"description": "",
					"displayName": "Color theme",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/ThemeColorEnum"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "1.2",
			"versionInfo": ""
		},
		"SingleValueConfig": {
			"description": "",
			"displayName": "SingleValueConfig",
			"documentation": "",
			"properties": {
				"defaultAggregation": {
					"description": "Defines default aggregation of the chart timeseries. If not defined or selected one is not supported, it is deduced from metrics metadata.",
					"displayName": "Default aggregation",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/AggregationType"
					}
				},
				"displayName": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Display name for value",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"foldTransformation": {
					"description": "Defines transformation method, which fold data into single value. If not defined, it is deduced automatically.",
					"displayName": "Fold transformation",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/FoldTransformation"
					}
				},
				"metric": {
					"description": "Defines how to fetch data for the single value visualization, please note that it shows only the first enabled metric from the query and also various fold transformations needs to be explicitly defined here in the selector",
					"displayName": "Metric",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/types/MetricSelector"
					}
				},
				"showSparkline": {
					"description": "When true, the sparkline is visible",
					"displayName": "Show sparkline",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"showTrend": {
					"description": "When true, the trend is visible",
					"displayName": "Show trend",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"thresholds": {
					"description": "",
					"displayName": "List thresholds",
					"documentation": "List of defined thresholds for the chart",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/Threshold"
						}
					},
					"maxObjects": 100,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "1.3",
			"versionInfo": ""
		},
		"Threshold": {
			"description": "",
			"displayName": "Threshold",
			"documentation": "",
			"properties": {
				"color": {
					"constraints": [
						{
							"customMessage": "Please provide a valid color via HEX notation. e.g. #FF0000.",
							"pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
							"type": "PATTERN"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "#0000ff",
					"description": "RGB code of color",
					"displayName": "Color",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "color",
					"type": "text"
				},
				"value": {
					"default": 0,
					"description": "",
					"displayName": "Threshold value",
					"documentation": "Value of the threshold. Area above this threshold will be marked by selected color",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "float"
				}
			},
			"summaryPattern": "{value}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"VisualizationOptions": {
			"description": "",
			"displayName": "VisualizationOptions",
			"documentation": "Set visualization options for timeseries. You can set it globally for whole chart, or individually for each metric selector.\n\n Metric selector options override options for charts.",
			"properties": {
				"seriesType": {
					"description": "",
					"displayName": "Series type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/SeriesType"
					}
				},
				"showLegend": {
					"description": "When true, axis legend on the whole chart is visible",
					"displayName": "Show legend",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"themeColor": {
					"description": "",
					"displayName": "Color theme",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/enums/ThemeColorEnum"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0.2",
			"versionInfo": ""
		},
		"XAxis": {
			"description": "",
			"displayName": "XAxis",
			"documentation": "",
			"properties": {
				"name": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "",
					"displayName": "Name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"visible": {
					"default": true,
					"description": "When true, axis legend is visible",
					"displayName": "Is visible",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"YAxis": {
			"description": "",
			"displayName": "YAxis",
			"documentation": "",
			"properties": {
				"key": {
					"constraints": [
						{
							"maxLength": 50,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "Y-axis key to be matched with metric's reference",
					"displayName": "Y-Axis key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"max": {
					"constraints": [
						{
							"maxLength": 20,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Maximal axis value",
					"displayName": "Max",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"min": {
					"constraints": [
						{
							"maxLength": 20,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Minimal axis value",
					"displayName": "Min",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"name": {
					"constraints": [
						{
							"maxLength": 50,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Axis title",
					"displayName": "Axis title",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"position": {
					"default": "LEFT",
					"description": "Pick a side for the axis",
					"displayName": "Position",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/Position"
					}
				},
				"visible": {
					"default": true,
					"description": "When true, axis is visible",
					"displayName": "Is visible",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				}
			},
			"summaryPattern": "{key} {name}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"version": "4.4"
}