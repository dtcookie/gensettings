{
	"allowedScopes": [
		"ua-screen"
	],
	"constraints": [
		{
			"customMessage": "The scope must be a ME type or a valid generic type.",
			"customValidatorId": "ua-scope-validator",
			"type": "CUSTOM_VALIDATOR_REF"
		}
	],
	"description": "Define injections for entity details screen. Injections must be supported by the screen - layout needs to include injected cards placeholder. Cards order is based on card keys, so to be sure that your feature is integral, please use well-defined prefix for your cards.",
	"displayName": "Details screen injections",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"CardType": {
			"description": "",
			"displayName": "Card type",
			"documentation": "",
			"items": [
				{
					"displayName": "Chart group",
					"value": "CHART_GROUP"
				},
				{
					"displayName": "Entities list",
					"value": "ENTITIES_LIST"
				},
				{
					"displayName": "Events",
					"value": "EVENTS"
				},
				{
					"displayName": "Logs",
					"value": "LOGS"
				},
				{
					"displayName": "Message card",
					"value": "MESSAGE"
				}
			],
			"type": "enum"
		},
		"WidthType": {
			"description": "",
			"displayName": "WidthType",
			"documentation": "",
			"items": [
				{
					"displayName": "Full size",
					"value": "FULL_SIZE"
				},
				{
					"displayName": "Half size",
					"value": "HALF_SIZE"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 100,
	"multiObject": true,
	"ordered": false,
	"properties": {
		"collapsed": {
			"description": "If true, card content will be collapsed",
			"displayName": "Collapse card",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "boolean"
		},
		"conditions": {
			"description": "",
			"displayName": "List of conditions",
			"documentation": "All conditions from the list need to be fulfilled for the card to be visible",
			"items": {
				"constraints": [
					{
						"maxLength": 500,
						"minLength": 1,
						"type": "LENGTH"
					}
				],
				"datasource": {
					"filterProperties": [],
					"fullContext": false,
					"identifier": "conditionExpressionDatasource",
					"resetValue": "NEVER",
					"useApiSearch": true,
					"validate": false
				},
				"description": "",
				"displayName": "",
				"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
				"subType": "datasource",
				"type": "text"
			},
			"maxObjects": 10,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		},
		"entitySelectorTemplate": {
			"constraints": [
				{
					"maxLength": 500,
					"minLength": 1,
					"type": "LENGTH"
				},
				{
					"customMessage": "Invalid entity selector",
					"customValidatorId": "entity-selector-validator",
					"type": "CUSTOM_VALIDATOR_REF"
				}
			],
			"description": "An entity selector that is used to reference card from other ME type screen",
			"displayName": "Entity selector template",
			"documentation": "For example for a host screen where you want to show the processes charts this might look like this:  \n`type(PROCESS_GROUP_INSTANCE), fromRelationships.isProcessOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "text"
		},
		"key": {
			"constraints": [
				{
					"type": "NOT_BLANK"
				},
				{
					"maxLength": 200,
					"minLength": 1,
					"type": "LENGTH"
				},
				{
					"customMessage": "Card key must only contain letters, numbers or '-', '_'.",
					"pattern": "^[\\w-]*$",
					"type": "PATTERN"
				}
			],
			"datasource": {
				"filterProperties": [],
				"fullContext": true,
				"identifier": "cardKeyDataSource",
				"resetValue": "NEVER",
				"useApiSearch": true,
				"validate": false
			},
			"default": "default",
			"description": "Unique key of the card, which is used to reference desired card configuration",
			"displayName": "Card key",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"subType": "datasource",
			"type": "text"
		},
		"type": {
			"default": "CHART_GROUP",
			"description": "",
			"displayName": "Card Type",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/enums/CardType"
			}
		},
		"width": {
			"description": "A value that determines how much vertical space will that card take",
			"displayName": "Card width",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": {
				"$ref": "#/enums/WidthType"
			}
		}
	},
	"schemaGroups": [
		"group:unified-analysis"
	],
	"schemaId": "builtin:ua.injections",
	"types": {},
	"version": "0.4"
}