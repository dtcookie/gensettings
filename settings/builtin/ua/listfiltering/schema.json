{
	"allowedScopes": [
		"ua-screen"
	],
	"constraints": [
		{
			"customMessage": "The scope must be a ME type or a valid generic type.",
			"customValidatorId": "ua-scope-validator",
			"type": "CUSTOM_VALIDATOR_REF"
		}
	],
	"description": "Define filters on the list screen.",
	"displayName": "List screen filtering",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"ModifierType": {
			"description": "",
			"displayName": "ModifierType",
			"documentation": "",
			"items": [
				{
					"displayName": "startsWith",
					"value": "startsWith"
				},
				{
					"displayName": "equals",
					"value": "equals"
				},
				{
					"displayName": "contains",
					"value": "contains"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 1,
	"multiObject": false,
	"properties": {
		"entityFilters": {
			"description": "",
			"displayName": "Entity filters list",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": {
					"$ref": "#/types/EntityFilterGroupDefinition"
				}
			},
			"maxObjects": 50,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list"
		},
		"relationships": {
			"description": "",
			"displayName": "Entity relationships list",
			"documentation": "To filter by attributes of related entities you need to define relationship between them. \nFor example to filter by host group attribute on host list you need to add entity selector with relationship like this: `type(HOST_GROUP), toRelationship.isInstanceOf(type(HOST))`. \nInstead of `type(HOST)` you can use variable `$(entityConditions)`. \nRelationships should cover all possible pairs of entity types in filters.",
			"items": {
				"constraints": [
					{
						"maxLength": 500,
						"minLength": 1,
						"type": "LENGTH"
					}
				],
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": "text"
			},
			"maxObjects": 50,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		}
	},
	"schemaGroups": [
		"group:unified-analysis"
	],
	"schemaId": "builtin:ua.list-filtering",
	"types": {
		"EntityFilterDefinition": {
			"description": "",
			"displayName": "EntityFilterDefinition",
			"documentation": "",
			"properties": {
				"defaultSearch": {
					"default": false,
					"description": "When true, as user is typing it will suggest this key as default for searching. There can be only 1 default search filter in filtering.",
					"displayName": "Is default search",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": true,
						"property": "freeText",
						"type": "EQUALS"
					},
					"type": "boolean"
				},
				"displayName": {
					"constraints": [
						{
							"maxLength": 100,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"distinct": {
					"default": true,
					"description": "When true, there can be only a single instance of this filter.",
					"displayName": "Is distinct",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"entityTypes": {
					"description": "List of entity types that are filtered by this filter. All of them must have defined relationship to entity.",
					"displayName": "Entity types list",
					"documentation": "",
					"items": {
						"constraints": [
							{
								"maxLength": 500,
								"minLength": 1,
								"type": "LENGTH"
							}
						],
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": "text"
					},
					"maxObjects": 50,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"freeText": {
					"default": false,
					"description": "When true, user can type any text value. When false, user can only select one of the suggestions.",
					"displayName": "Is free text filter",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				},
				"hidden": {
					"description": "When true, this filter will be hidden.",
					"displayName": "Is hidden",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"modifier": {
					"default": "contains",
					"description": "Specifies the behavior of free text filter's value",
					"displayName": "Text filter modifier",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": true,
						"property": "freeText",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/enums/ModifierType"
					}
				},
				"splittingChart": {
					"description": "Configure splitting chart for this filter.",
					"displayName": "Splitting chart",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": {
						"$ref": "#/types/SplittingChartConfig"
					}
				},
				"type": {
					"constraints": [
						{
							"maxLength": 100,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				}
			},
			"summaryPattern": "{displayName} ({type})",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"EntityFilterGroupDefinition": {
			"description": "",
			"displayName": "EntityFilterGroupDefinition",
			"documentation": "",
			"properties": {
				"displayName": {
					"constraints": [
						{
							"maxLength": 100,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Group display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"filters": {
					"description": "Define entity filters.",
					"displayName": "Filters",
					"documentation": "",
					"items": {
						"description": "",
						"displayName": "",
						"documentation": "",
						"type": {
							"$ref": "#/types/EntityFilterDefinition"
						}
					},
					"maxObjects": 500,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "list"
				}
			},
			"summaryPattern": "{displayName}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"SplittingChartConfig": {
			"description": "",
			"displayName": "SplittingChartConfig",
			"documentation": "",
			"properties": {
				"displayChart": {
					"default": true,
					"description": "When true, splitting chart for this filter will be displayed",
					"displayName": "Display splitting chart",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "boolean"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"version": "1.2.3"
}