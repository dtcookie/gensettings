{
	"allowedScopes": [
		"ua-screen"
	],
	"constraints": [
		{
			"customMessage": "The scope must be a ME type or a valid generic type.",
			"customValidatorId": "ua-scope-validator",
			"type": "CUSTOM_VALIDATOR_REF"
		}
	],
	"description": "Entity properties are shown on the card as key-value pairs. By default, all available attribute properties are displayed. Use this configuration to override their display options or specify relation properties.",
	"displayName": "Properties card",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"PropertyType": {
			"description": "",
			"displayName": "PropertyType",
			"documentation": "",
			"items": [
				{
					"displayName": "Attribute",
					"value": "ATTRIBUTE"
				},
				{
					"displayName": "Relation",
					"value": "RELATION"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 1,
	"multiObject": false,
	"properties": {
		"displayOnlyConfigured": {
			"description": "By default, all available properties are displayed in the card. Use this flag to display only properties defined in the table below.",
			"displayName": "Display only configured properties",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "boolean"
		},
		"properties": {
			"description": "",
			"displayName": "Properties list",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": {
					"$ref": "#/types/PropertyDefinition"
				}
			},
			"maxObjects": 200,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list"
		},
		"tagsRelatedEntitySelectors": {
			"description": "Display additionally tags of some related entities. Tags of related entities are read-only. The limit is 10 related entities.",
			"displayName": "Tags of related entities - entity selector templates",
			"documentation": "For example for a host screen where you want to show host and it's host group tags - might look like this:  \n`type(HOST_GROUP), toRelationships.isInstanceOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the relation condition.",
			"items": {
				"constraints": [
					{
						"maxLength": 500,
						"minLength": 1,
						"type": "LENGTH"
					},
					{
						"customMessage": "Invalid entity selector",
						"customValidatorId": "entity-selector-validator",
						"type": "CUSTOM_VALIDATOR_REF"
					}
				],
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": "text"
			},
			"maxObjects": 10,
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		}
	},
	"schemaGroups": [
		"group:unified-analysis"
	],
	"schemaId": "builtin:ua.properties",
	"types": {
		"AttributeType": {
			"description": "Allows to overwrite attribute display options",
			"displayName": "AttributeType",
			"documentation": "",
			"properties": {
				"displayName": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Leave empty to resolve automatically",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"entitySelectorTemplate": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Invalid entity selector",
							"customValidatorId": "entity-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"description": "An optional entity selector to fetch attribute from related entity",
					"displayName": "Entity selector template",
					"documentation": "For example for a host screen where you want to display property of VM that it runs on, this might look like this:  \n`type(AWS_AVAILABILITY_ZONE), fromRelationships.isSiteOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the current ME selector.\n\nPlease remember that attribute key needs to be available in the context of related entity.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				},
				"hidden": {
					"description": "",
					"displayName": "Hide the property",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"key": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "default",
					"description": "Use to reference desired attribute",
					"displayName": "Attribute key",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"unit": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Use to format numeric properties",
					"displayName": "Unit",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"PropertyDefinition": {
			"description": "",
			"displayName": "PropertyDefinition",
			"documentation": "",
			"properties": {
				"attribute": {
					"description": "",
					"displayName": "Attribute options",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "ATTRIBUTE",
						"property": "type",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/types/AttributeType"
					}
				},
				"conditions": {
					"description": "",
					"displayName": "List of conditions",
					"documentation": "All conditions from the list need to be fulfilled for the property to be visible",
					"items": {
						"constraints": [
							{
								"maxLength": 500,
								"minLength": 1,
								"type": "LENGTH"
							}
						],
						"datasource": {
							"filterProperties": [],
							"fullContext": false,
							"identifier": "conditionExpressionDatasource",
							"resetValue": "NEVER",
							"useApiSearch": true,
							"validate": false
						},
						"description": "",
						"displayName": "",
						"documentation": "Single condition expression. The format is: conditionName|key=param|key2=param2",
						"subType": "datasource",
						"type": "text"
					},
					"maxObjects": 10,
					"minObjects": 0,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "set"
				},
				"importantProperty": {
					"description": "If true, this property will be marked as important in the UI. Those will be displayed in the header below the entity name.",
					"displayName": "Display in header",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "boolean"
				},
				"relation": {
					"description": "",
					"displayName": "Relation options",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValue": "RELATION",
						"property": "type",
						"type": "EQUALS"
					},
					"type": {
						"$ref": "#/types/RelationType"
					}
				},
				"type": {
					"default": "ATTRIBUTE",
					"description": "Choose to overwrite attribute display options or specify relation",
					"displayName": "Property type",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/PropertyType"
					}
				}
			},
			"summaryPattern": "{attribute.key}{relation.displayName} {type}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"RelationType": {
			"description": "Allows to specify link to the related entity",
			"displayName": "RelationType",
			"documentation": "",
			"properties": {
				"displayName": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "default",
					"description": "",
					"displayName": "Display name",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"entitySelectorTemplate": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "Invalid entity selector",
							"customValidatorId": "entity-selector-validator",
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"default": "",
					"description": "An entity selector that is used to fetch the selected entities",
					"displayName": "Entity selector template",
					"documentation": "For example for a process screen where you want to link to the process group this might look like this:  \n`type(PROCESS_GROUP), toRelationships.isInstanceOf($(entityConditions))`\n\nPlease mind that the `$(entityConditions)` is a placeholder for the current ME selector.",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				},
				"fallbackMessage": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"description": "Display additional message if no entity is found. By default whole property is hidden.",
					"displayName": "Fallback Message",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"type": "text"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"version": "2.8.4"
}